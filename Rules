#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

postprocess do
  create_search_index
end

compile '/assets/css/*/' do
  if item.identifier =~ %r{/_[^/]+/$}
    # don't compile partials
  else
    filter :sass, :syntax => :scss, :style => :compressed
    filter :relativize_paths, type: :css
  end
end

compile '/assets/*/' do
  # don't filter or layout
end

compile '/sitemap/' do
  filter :erb
end

compile '/robots/' do
  filter :erb
end

compile '/v2/feed/' do
  filter :erb
  layout 'empty'
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    filter :preprocess
    filter :kramdown, toc_levels: [2], enable_coderay: false
    filter :colorize_syntax, default_colorizer: :rouge
    filter :postprocess
    layout 'default'
  end
end


route '/assets/css/*/' do
  if item.identifier =~ %r{/_[^/]+/$}
    # don't route partials
  else
    item.identifier.chop + '.css'
  end
end

route '/assets/*/' do
  item.identifier.to_s.chop + '.' + item[:extension]
end

route '/sitemap/' do
  item.identifier.chop + '.xml'
end

route '/robots/' do
  item.identifier.chop + '.txt'
end

route '/v2/feed/' do
  item.identifier.chop + '.xml'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.to_s.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
